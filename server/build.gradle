buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

processResources.destinationDir = compileJava.destinationDir
compileJava.dependsOn processResources

jar {
    baseName = 'sirens'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
    mavenLocal()
}

sourceCompatibility = targetCompatibility = 1.8
tasks.withType(AbstractCompile)*.options*.encoding = 'UTF-8'

dependencies {
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-jdbc")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-social-twitter")
    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile("org.springframework.social:spring-social-security:1.1.0.RELEASE")
    compile("org.springframework.cloud:spring-cloud-aws-context:1.0.0.RELEASE")
    compile("org.springframework.cloud:spring-cloud-aws-autoconfigure:1.0.0.RELEASE")
    compile("org.thymeleaf.extras:thymeleaf-extras-springsecurity3:2.1.1.RELEASE")
    compile("org.seasar.doma:doma:2.1.0")
    compile("org.hibernate:hibernate-validator")
    compile("mysql:mysql-connector-java:5.1.30")
    compile("net.sourceforge.nekohtml:nekohtml:1.9.20")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.5.2")
    testCompile("junit:junit:4.12")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.1'
}

bootRun {
    if ( project.hasProperty('args') ) {
        args project.args.split('\\s+')
    }
}

apply from:'eclipse.gradle'
apply from:'doma-gen.gradle'
